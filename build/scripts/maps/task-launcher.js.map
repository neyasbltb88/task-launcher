{"version":3,"names":[],"mappings":"","sources":["task-launcher.js"],"sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./app/scripts/task-launcher.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./app/scripts/task-launcher.js\":\n/*!**************************************!*\\\n  !*** ./app/scripts/task-launcher.js ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return Launcher; });\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\nvar Launcher =\\n/*#__PURE__*/\\nfunction () {\\n  /*  tasks = {\\r\\n   *       condition:  @Function: должна проверять условие, необходимое для вызова callback и возвращать boolean.\\r\\n   *       callback:   @Function: вызовется когда condition вернет true.\\r\\n   *       name:       @String: Имя таска для более удобного управления им. Необязательный.\\r\\n   *       arg:        @Any: один аргумент, который передастся в callback при его вызове. Необязательный.\\r\\n   *                   @Function: если передана функция, то все, что она вернет, будет передано в callback при его вызове.\\r\\n   *       attempts:   @Number: количество попыток для проверки условия. Необязательный.\\r\\n   *                   Если не передан, проверка будет бесконечной, пока condition не вернет true или не будет вызван метод остановки .stop()\\r\\n   *       run:        @Boolean: если true, то запуск таска произойдет автоматически, без вызова .run(). Необязательный.\\r\\n   *   } */\\n  function Launcher() {\\n    var _this = this;\\n\\n    var _tasks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\\n\\n    _classCallCheck(this, Launcher);\\n\\n    _defineProperty(this, \\\"running\\\", false);\\n\\n    _defineProperty(this, \\\"rafId\\\", 0);\\n\\n    _defineProperty(this, \\\"tasks\\\", []);\\n\\n    _defineProperty(this, \\\"add\\\", function (tasks) {\\n      var newTasks = [];\\n\\n      if (tasks instanceof Array) {\\n        newTasks = tasks;\\n      } else if (tasks instanceof Object) {\\n        newTasks.push(tasks);\\n      }\\n\\n      newTasks.forEach(function (task) {\\n        // Валидация таска\\n        if (!task.condition || typeof task.condition !== 'function') {\\n          console.warn('Laucher: не передано условие', task);\\n          return;\\n        }\\n\\n        if (!task.callback || typeof task.callback !== 'function') {\\n          console.warn('Laucher: не передан коллбек', task);\\n          return;\\n        } // Подготовка таска\\n\\n\\n        task.attempts = tasks.attempts || Infinity;\\n        task.tryNum = 0;\\n        task.run = task.run || false; // Добавление в общий массив тасков\\n\\n        _this.tasks.push(task);\\n      }); // Попытка запуска тасков после добавления\\n\\n      _this.rafId = requestAnimationFrame(_this._launch);\\n    });\\n\\n    _defineProperty(this, \\\"hasActive\\\", function () {\\n      return _this.tasks.some(function (task) {\\n        return task.run;\\n      });\\n    });\\n\\n    _defineProperty(this, \\\"_launch\\\", function (rafId) {\\n      // Если не рекурсивный запуск и уже запущен процесс проверки тасков, или нет активных, то выходим\\n      if (_this.rafId !== rafId && (_this.running || !_this.hasActive())) return;\\n      _this.running = true;\\n\\n      _this.tasks.forEach(function (task, index) {\\n        // Если таск не активный, то выходим\\n        if (!task.run) return; // Если функция условия таска вернула true, отключаем дальнейшее выполнение таска и выззываем callback\\n\\n        if (task.condition.call(_this)) {\\n          _this.stop(index);\\n\\n          task.callback.call(_this, typeof task.arg === 'function' ? task.arg.call(_this) : task.arg); // Если функция условия вернула false и количество попыток исчерпано, тормозим таск\\n        } else if (!task.condition.call(_this)) {\\n          task.tryNum++;\\n\\n          if (task.tryNum >= task.attempts) {\\n            _this.stop(index);\\n          }\\n        }\\n      }); // После цикла по таскам проверяем остались ли активные таски\\n      // Если активные таски есть, планируем следующий запуск _launch\\n\\n\\n      if (_this.hasActive()) {\\n        _this.rafId = requestAnimationFrame(function () {\\n          return _this._launch(_this.rafId);\\n        }); // Если таски все завершены, то переходим в глобальное состояние остановки\\n      } else {\\n        _this.stop();\\n      }\\n    });\\n\\n    _defineProperty(this, \\\"_runTask\\\", function (taskId, arg) {\\n      var index = _this._findTask(taskId);\\n\\n      if (index === false) return false; // Если нет аргумениа и таск уже запущен, возвращаем false\\n\\n      if (!arg && _this.tasks[index].run) return false; // Запускаем таск\\n\\n      _this.tasks[index].run = true; // Если есть аргумент, обновим его в таске\\n\\n      if (arg) _this.tasks[index].arg = arg;\\n      return index;\\n    });\\n\\n    _defineProperty(this, \\\"run\\\", function () {\\n      var runs; // Если аргументов нет, то запуск всех тасков\\n\\n      if (arguments.length === 0) {\\n        runs = [];\\n\\n        _this.tasks.forEach(function (task, index) {\\n          if (task.run === false) {\\n            runs.push(index);\\n            task.run = true;\\n          }\\n        }); // Если аргумент один, то это индекс или имя таска\\n\\n      } else if (arguments.length === 1) {\\n        runs = _this._runTask(arguments.length <= 0 ? undefined : arguments[0]); // Если аргумента два, то в первом индекс/имя таска, а во втором обновление для task.arg\\n      } else if (arguments.length === 2) {\\n        runs = _this._runTask(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\\n      } // Запуск выполнения проверки активных тасков\\n\\n\\n      _this.rafId = requestAnimationFrame(_this._launch);\\n      return runs;\\n    });\\n\\n    _defineProperty(this, \\\"stop\\\", function (taskId) {\\n      var stoped;\\n\\n      if (taskId !== undefined) {\\n        var index = _this._stopTask(taskId);\\n\\n        if (index === false) return false;\\n        stoped = index;\\n      } else {\\n        stoped = [];\\n\\n        _this.tasks.forEach(function (task, idx) {\\n          var index = _this._stopTask(idx);\\n\\n          if (index === false) return false;\\n          stoped.push(index);\\n        });\\n\\n        _this.running = false;\\n        cancelAnimationFrame(_this.rafId);\\n        _this.rafId = 0;\\n      }\\n\\n      return stoped;\\n    });\\n\\n    this.add(_tasks);\\n  }\\n\\n  _createClass(Launcher, [{\\n    key: \\\"_findTask\\\",\\n    value: function _findTask(taskId) {\\n      var index; // Если число - то это индекс, и если под индексом есть таск\\n\\n      if (typeof taskId === 'number' && this.tasks[taskId]) {\\n        index = taskId; // Если строка, то это имя\\n      } else if (typeof taskId === 'string') {\\n        this.tasks.forEach(function (task, ind) {\\n          if (task.name === taskId) index = ind;\\n        });\\n      } else {\\n        return false;\\n      }\\n\\n      return index;\\n    }\\n  }, {\\n    key: \\\"_stopTask\\\",\\n    value: function _stopTask(taskId) {\\n      var index = this._findTask(taskId);\\n\\n      if (index === false) return false;\\n      this.tasks[index].run = false;\\n      this.tasks[index].tryNum = 0;\\n      return index;\\n    } // Остановка рекурсивной проверки условия\\n\\n  }]);\\n\\n  return Launcher;\\n}();\\n\\n\\nwindow.Launcher = Launcher;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc2NyaXB0cy90YXNrLWxhdW5jaGVyLmpzP2NjMTgiXSwibmFtZXMiOlsiTGF1bmNoZXIiLCJ0YXNrcyIsIm5ld1Rhc2tzIiwiQXJyYXkiLCJPYmplY3QiLCJwdXNoIiwiZm9yRWFjaCIsInRhc2siLCJjb25kaXRpb24iLCJjb25zb2xlIiwid2FybiIsImNhbGxiYWNrIiwiYXR0ZW1wdHMiLCJJbmZpbml0eSIsInRyeU51bSIsInJ1biIsInJhZklkIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiX2xhdW5jaCIsInNvbWUiLCJydW5uaW5nIiwiaGFzQWN0aXZlIiwiaW5kZXgiLCJjYWxsIiwic3RvcCIsImFyZyIsInRhc2tJZCIsIl9maW5kVGFzayIsInJ1bnMiLCJsZW5ndGgiLCJfcnVuVGFzayIsInN0b3BlZCIsInVuZGVmaW5lZCIsIl9zdG9wVGFzayIsImlkeCIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiYWRkIiwiaW5kIiwibmFtZSIsIndpbmRvdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQUFxQkEsUTs7O0FBS2pCOzs7Ozs7Ozs7O0FBVUEsc0JBQXdCO0FBQUE7O0FBQUEsUUFBWkMsTUFBWSx1RUFBSixFQUFJOztBQUFBOztBQUFBLHFDQWRkLEtBY2M7O0FBQUEsbUNBYmhCLENBYWdCOztBQUFBLG1DQVpoQixFQVlnQjs7QUFBQSxpQ0FJbEIsVUFBQ0EsS0FBRCxFQUFXO0FBQ2IsVUFBSUMsUUFBUSxHQUFHLEVBQWY7O0FBQ0EsVUFBSUQsS0FBSyxZQUFZRSxLQUFyQixFQUE0QjtBQUN4QkQsZ0JBQVEsR0FBR0QsS0FBWDtBQUNILE9BRkQsTUFFTyxJQUFJQSxLQUFLLFlBQVlHLE1BQXJCLEVBQTZCO0FBQ2hDRixnQkFBUSxDQUFDRyxJQUFULENBQWNKLEtBQWQ7QUFDSDs7QUFFREMsY0FBUSxDQUFDSSxPQUFULENBQWlCLFVBQUFDLElBQUksRUFBSTtBQUNyQjtBQUNBLFlBQUksQ0FBQ0EsSUFBSSxDQUFDQyxT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LElBQUQsRUFBTzhCLEdBQVAsRUFBZTtBQUM5QixjQUFJOUIsSUFBSSxDQUFDK0IsSUFBTCxLQUFjWixNQUFsQixFQUEwQkosS0FBSyxHQUFHZSxHQUFSO0FBQzdCLFNBRkQ7QUFHSCxPQUpNLE1BSUE7QUFDSCxlQUFPLEtBQVA7QUFDSDs7QUFFRCxhQUFPZixLQUFQO0FBQ0g7Ozs4QkE4Q1NJLE0sRUFBUTtBQUNkLFVBQUlKLEtBQUssR0FBRyxLQUFLSyxTQUFMLENBQWVELE1BQWYsQ0FBWjs7QUFDQSxVQUFJSixLQUFLLEtBQUssS0FBZCxFQUFxQixPQUFPLEtBQVA7QUFFckIsV0FBS3JCLEtBQUwsQ0FBV3FCLEtBQVgsRUFBa0JQLEdBQWxCLEdBQXdCLEtBQXhCO0FBQ0EsV0FBS2QsS0FBTCxDQUFXcUIsS0FBWCxFQUFrQlIsTUFBbEIsR0FBMkIsQ0FBM0I7QUFFQSxhQUFPUSxLQUFQO0FBQ0gsSyxDQUVEOzs7Ozs7OztBQTBCSmlCLE1BQU0sQ0FBQ3ZDLFFBQVAsR0FBa0JBLFFBQWxCIiwiZmlsZSI6Ii4vYXBwL3NjcmlwdHMvdGFzay1sYXVuY2hlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIExhdW5jaGVyIHtcclxuICAgIHJ1bm5pbmcgPSBmYWxzZTtcclxuICAgIHJhZklkID0gMDtcclxuICAgIHRhc2tzID0gW107XHJcblxyXG4gICAgLyogIHRhc2tzID0ge1xyXG4gICAgICogICAgICAgY29uZGl0aW9uOiAgQEZ1bmN0aW9uOiDQtNC+0LvQttC90LAg0L/RgNC+0LLQtdGA0Y/RgtGMINGD0YHQu9C+0LLQuNC1LCDQvdC10L7QsdGF0L7QtNC40LzQvtC1INC00LvRjyDQstGL0LfQvtCy0LAgY2FsbGJhY2sg0Lgg0LLQvtC30LLRgNCw0YnQsNGC0YwgYm9vbGVhbi5cclxuICAgICAqICAgICAgIGNhbGxiYWNrOiAgIEBGdW5jdGlvbjog0LLRi9C30L7QstC10YLRgdGPINC60L7Qs9C00LAgY29uZGl0aW9uINCy0LXRgNC90LXRgiB0cnVlLlxyXG4gICAgICogICAgICAgbmFtZTogICAgICAgQFN0cmluZzog0JjQvNGPINGC0LDRgdC60LAg0LTQu9GPINCx0L7Qu9C10LUg0YPQtNC+0LHQvdC+0LPQviDRg9C/0YDQsNCy0LvQtdC90LjRjyDQuNC8LiDQndC10L7QsdGP0LfQsNGC0LXQu9GM0L3Ri9C5LlxyXG4gICAgICogICAgICAgYXJnOiAgICAgICAgQEFueTog0L7QtNC40L0g0LDRgNCz0YPQvNC10L3Rgiwg0LrQvtGC0L7RgNGL0Lkg0L/QtdGA0LXQtNCw0YHRgtGB0Y8g0LIgY2FsbGJhY2sg0L/RgNC4INC10LPQviDQstGL0LfQvtCy0LUuINCd0LXQvtCx0Y/Qt9Cw0YLQtdC70YzQvdGL0LkuXHJcbiAgICAgKiAgICAgICAgICAgICAgICAgICBARnVuY3Rpb246INC10YHQu9C4INC/0LXRgNC10LTQsNC90LAg0YTRg9C90LrRhtC40Y8sINGC0L4g0LLRgdC1LCDRh9GC0L4g0L7QvdCwINCy0LXRgNC90LXRgiwg0LHRg9C00LXRgiDQv9C10YDQtdC00LDQvdC+INCyIGNhbGxiYWNrINC/0YDQuCDQtdCz0L4g0LLRi9C30L7QstC1LlxyXG4gICAgICogICAgICAgYXR0ZW1wdHM6ICAgQE51bWJlcjog0LrQvtC70LjRh9C10YHRgtCy0L4g0L/QvtC/0YvRgtC+0Log0LTQu9GPINC/0YDQvtCy0LXRgNC60Lgg0YPRgdC70L7QstC40Y8uINCd0LXQvtCx0Y/Qt9Cw0YLQtdC70YzQvdGL0LkuXHJcbiAgICAgKiAgICAgICAgICAgICAgICAgICDQldGB0LvQuCDQvdC1INC/0LXRgNC10LTQsNC9LCDQv9GA0L7QstC10YDQutCwINCx0YPQtNC10YIg0LHQtdGB0LrQvtC90LXRh9C90L7QuSwg0L/QvtC60LAgY29uZGl0aW9uINC90LUg0LLQtdGA0L3QtdGCIHRydWUg0LjQu9C4INC90LUg0LHRg9C00LXRgiDQstGL0LfQstCw0L0g0LzQtdGC0L7QtCDQvtGB0YLQsNC90L7QstC60LggLnN0b3AoKVxyXG4gICAgICogICAgICAgcnVuOiAgICAgICAgQEJvb2xlYW46INC10YHQu9C4IHRydWUsINGC0L4g0LfQsNC/0YPRgdC6INGC0LDRgdC60LAg0L/RgNC+0LjQt9C+0LnQtNC10YIg0LDQstGC0L7QvNCw0YLQuNGH0LXRgdC60LgsINCx0LXQtyDQstGL0LfQvtCy0LAgLnJ1bigpLiDQndC10L7QsdGP0LfQsNGC0LXQu9GM0L3Ri9C5LlxyXG4gICAgICogICB9ICovXHJcbiAgICBjb25zdHJ1Y3Rvcih0YXNrcyA9IFtdKSB7XHJcbiAgICAgICAgdGhpcy5hZGQodGFza3MpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZCA9ICh0YXNrcykgPT4ge1xyXG4gICAgICAgIGxldCBuZXdUYXNrcyA9IFtdO1xyXG4gICAgICAgIGlmICh0YXNrcyBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgICAgICAgIG5ld1Rhc2tzID0gdGFza3M7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0YXNrcyBpbnN0YW5jZW9mIE9iamVjdCkge1xyXG4gICAgICAgICAgICBuZXdUYXNrcy5wdXNoKHRhc2tzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG5ld1Rhc2tzLmZvckVhY2godGFzayA9PiB7XHJcbiAgICAgICAgICAgIC8vINCS0LDQu9C40LTQsNGG0LjRjyDRgtCw0YHQutCwXHJcbiAgICAgICAgICAgIGlmICghdGFzay5jb25kaXRpb24gfHwgdHlwZW9mIHRhc2suY29uZGl0aW9uICE9PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ0xhdWNoZXI6INC90LUg0L/QtdGA0LXQtNCw0L3QviDRg9GB0LvQvtCy0LjQtScsIHRhc2spO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghdGFzay5jYWxsYmFjayB8fCB0eXBlb2YgdGFzay5jYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdMYXVjaGVyOiDQvdC1INC/0LXRgNC10LTQsNC9INC60L7Qu9C70LHQtdC6JywgdGFzayk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vINCf0L7QtNCz0L7RgtC+0LLQutCwINGC0LDRgdC60LBcclxuICAgICAgICAgICAgdGFzay5hdHRlbXB0cyA9IHRhc2tzLmF0dGVtcHRzIHx8IEluZmluaXR5O1xyXG4gICAgICAgICAgICB0YXNrLnRyeU51bSA9IDA7XHJcbiAgICAgICAgICAgIHRhc2sucnVuID0gdGFzay5ydW4gfHwgZmFsc2U7XHJcblxyXG4gICAgICAgICAgICAvLyDQlNC+0LHQsNCy0LvQtdC90LjQtSDQsiDQvtCx0YnQuNC5INC80LDRgdGB0LjQsiDRgtCw0YHQutC+0LJcclxuICAgICAgICAgICAgdGhpcy50YXNrcy5wdXNoKHRhc2spO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyDQn9C+0L/Ri9GC0LrQsCDQt9Cw0L/Rg9GB0LrQsCDRgtCw0YHQutC+0LIg0L/QvtGB0LvQtSDQtNC+0LHQsNCy0LvQtdC90LjRj1xyXG4gICAgICAgIHRoaXMucmFmSWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5fbGF1bmNoKTtcclxuICAgIH1cclxuXHJcbiAgICBoYXNBY3RpdmUgPSAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudGFza3Muc29tZSh0YXNrID0+IHRhc2sucnVuKTtcclxuICAgIH1cclxuXHJcbiAgICBfbGF1bmNoID0gKHJhZklkKSA9PiB7XHJcbiAgICAgICAgLy8g0JXRgdC70Lgg0L3QtSDRgNC10LrRg9GA0YHQuNCy0L3Ri9C5INC30LDQv9GD0YHQuiDQuCDRg9C20LUg0LfQsNC/0YPRidC10L0g0L/RgNC+0YbQtdGB0YEg0L/RgNC+0LLQtdGA0LrQuCDRgtCw0YHQutC+0LIsINC40LvQuCDQvdC10YIg0LDQutGC0LjQstC90YvRhSwg0YLQviDQstGL0YXQvtC00LjQvFxyXG4gICAgICAgIGlmICh0aGlzLnJhZklkICE9PSByYWZJZCAmJiAodGhpcy5ydW5uaW5nIHx8ICF0aGlzLmhhc0FjdGl2ZSgpKSkgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMucnVubmluZyA9IHRydWU7XHJcblxyXG4gICAgICAgIHRoaXMudGFza3MuZm9yRWFjaCgodGFzaywgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgLy8g0JXRgdC70Lgg0YLQsNGB0Log0L3QtSDQsNC60YLQuNCy0L3Ri9C5LCDRgtC+INCy0YvRhdC+0LTQuNC8XHJcbiAgICAgICAgICAgIGlmICghdGFzay5ydW4pIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIC8vINCV0YHQu9C4INGE0YPQvdC60YbQuNGPINGD0YHQu9C+0LLQuNGPINGC0LDRgdC60LAg0LLQtdGA0L3Rg9C70LAgdHJ1ZSwg0L7RgtC60LvRjtGH0LDQtdC8INC00LDQu9GM0L3QtdC50YjQtdC1INCy0YvQv9C+0LvQvdC10L3QuNC1INGC0LDRgdC60LAg0Lgg0LLRi9C30LfRi9Cy0LDQtdC8IGNhbGxiYWNrXHJcbiAgICAgICAgICAgIGlmICh0YXNrLmNvbmRpdGlvbi5jYWxsKHRoaXMpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0b3AoaW5kZXgpO1xyXG5cclxuICAgICAgICAgICAgICAgIHRhc2suY2FsbGJhY2suY2FsbCh0aGlzLCB0eXBlb2YgdGFzay5hcmcgPT09ICdmdW5jdGlvbicgPyB0YXNrLmFyZy5jYWxsKHRoaXMpIDogdGFzay5hcmcpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vINCV0YHQu9C4INGE0YPQvdC60YbQuNGPINGD0YHQu9C+0LLQuNGPINCy0LXRgNC90YPQu9CwIGZhbHNlINC4INC60L7Qu9C40YfQtdGB0YLQstC+INC/0L7Qv9GL0YLQvtC6INC40YHRh9C10YDQv9Cw0L3Qviwg0YLQvtGA0LzQvtC30LjQvCDRgtCw0YHQulxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKCF0YXNrLmNvbmRpdGlvbi5jYWxsKHRoaXMpKSB7XHJcbiAgICAgICAgICAgICAgICB0YXNrLnRyeU51bSsrO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0YXNrLnRyeU51bSA+PSB0YXNrLmF0dGVtcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdG9wKGluZGV4KTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8g0J/QvtGB0LvQtSDRhtC40LrQu9CwINC/0L4g0YLQsNGB0LrQsNC8INC/0YDQvtCy0LXRgNGP0LXQvCDQvtGB0YLQsNC70LjRgdGMINC70Lgg0LDQutGC0LjQstC90YvQtSDRgtCw0YHQutC4XHJcblxyXG4gICAgICAgIC8vINCV0YHQu9C4INCw0LrRgtC40LLQvdGL0LUg0YLQsNGB0LrQuCDQtdGB0YLRjCwg0L/Qu9Cw0L3QuNGA0YPQtdC8INGB0LvQtdC00YPRjtGJ0LjQuSDQt9Cw0L/Rg9GB0LogX2xhdW5jaFxyXG4gICAgICAgIGlmICh0aGlzLmhhc0FjdGl2ZSgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmFmSWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5fbGF1bmNoKHRoaXMucmFmSWQpKTtcclxuXHJcbiAgICAgICAgICAgIC8vINCV0YHQu9C4INGC0LDRgdC60Lgg0LLRgdC1INC30LDQstC10YDRiNC10L3Riywg0YLQviDQv9C10YDQtdGF0L7QtNC40Lwg0LIg0LPQu9C+0LHQsNC70YzQvdC+0LUg0YHQvtGB0YLQvtGP0L3QuNC1INC+0YHRgtCw0L3QvtCy0LrQuFxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RvcCgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgX2ZpbmRUYXNrKHRhc2tJZCkge1xyXG4gICAgICAgIGxldCBpbmRleDtcclxuICAgICAgICAvLyDQldGB0LvQuCDRh9C40YHQu9C+IC0g0YLQviDRjdGC0L4g0LjQvdC00LXQutGBLCDQuCDQtdGB0LvQuCDQv9C+0LQg0LjQvdC00LXQutGB0L7QvCDQtdGB0YLRjCDRgtCw0YHQulxyXG4gICAgICAgIGlmICh0eXBlb2YgdGFza0lkID09PSAnbnVtYmVyJyAmJiB0aGlzLnRhc2tzW3Rhc2tJZF0pIHtcclxuICAgICAgICAgICAgaW5kZXggPSB0YXNrSWQ7XHJcblxyXG4gICAgICAgICAgICAvLyDQldGB0LvQuCDRgdGC0YDQvtC60LAsINGC0L4g0Y3RgtC+INC40LzRj1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHRhc2tJZCA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgdGhpcy50YXNrcy5mb3JFYWNoKCh0YXNrLCBpbmQpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICh0YXNrLm5hbWUgPT09IHRhc2tJZCkgaW5kZXggPSBpbmQ7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBpbmRleDtcclxuICAgIH1cclxuXHJcbiAgICBfcnVuVGFzayA9ICh0YXNrSWQsIGFyZykgPT4ge1xyXG4gICAgICAgIGxldCBpbmRleCA9IHRoaXMuX2ZpbmRUYXNrKHRhc2tJZCk7XHJcbiAgICAgICAgaWYgKGluZGV4ID09PSBmYWxzZSkgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgICAgICAvLyDQldGB0LvQuCDQvdC10YIg0LDRgNCz0YPQvNC10L3QuNCwINC4INGC0LDRgdC6INGD0LbQtSDQt9Cw0L/Rg9GJ0LXQvSwg0LLQvtC30LLRgNCw0YnQsNC10LwgZmFsc2VcclxuICAgICAgICBpZiAoIWFyZyAmJiB0aGlzLnRhc2tzW2luZGV4XS5ydW4pIHJldHVybiBmYWxzZTtcclxuXHJcbiAgICAgICAgLy8g0JfQsNC/0YPRgdC60LDQtdC8INGC0LDRgdC6XHJcbiAgICAgICAgdGhpcy50YXNrc1tpbmRleF0ucnVuID0gdHJ1ZTtcclxuICAgICAgICAvLyDQldGB0LvQuCDQtdGB0YLRjCDQsNGA0LPRg9C80LXQvdGCLCDQvtCx0L3QvtCy0LjQvCDQtdCz0L4g0LIg0YLQsNGB0LrQtVxyXG4gICAgICAgIGlmIChhcmcpIHRoaXMudGFza3NbaW5kZXhdLmFyZyA9IGFyZztcclxuXHJcbiAgICAgICAgcmV0dXJuIGluZGV4O1xyXG4gICAgfVxyXG5cclxuICAgIC8vINCX0LDQv9GD0YHQuiDRgNC10LrRg9GA0YHQuNCy0L3QvtC5INC/0YDQvtCy0LXRgNC60Lgg0YPRgdC70L7QstC40Lkg0YLQsNGB0LrQvtCyXHJcbiAgICBydW4gPSAoLi4uYXJncykgPT4ge1xyXG4gICAgICAgIGxldCBydW5zO1xyXG4gICAgICAgIC8vINCV0YHQu9C4INCw0YDQs9GD0LzQtdC90YLQvtCyINC90LXRgiwg0YLQviDQt9Cw0L/Rg9GB0Log0LLRgdC10YUg0YLQsNGB0LrQvtCyXHJcbiAgICAgICAgaWYgKGFyZ3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJ1bnMgPSBbXTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMudGFza3MuZm9yRWFjaCgodGFzaywgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICh0YXNrLnJ1biA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBydW5zLnB1c2goaW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhc2sucnVuID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvLyDQldGB0LvQuCDQsNGA0LPRg9C80LXQvdGCINC+0LTQuNC9LCDRgtC+INGN0YLQviDQuNC90LTQtdC60YEg0LjQu9C4INC40LzRjyDRgtCw0YHQutCwXHJcbiAgICAgICAgfSBlbHNlIGlmIChhcmdzLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgICAgICBydW5zID0gdGhpcy5fcnVuVGFzayhhcmdzWzBdKTtcclxuXHJcbiAgICAgICAgICAgIC8vINCV0YHQu9C4INCw0YDQs9GD0LzQtdC90YLQsCDQtNCy0LAsINGC0L4g0LIg0L/QtdGA0LLQvtC8INC40L3QtNC10LrRgS/QuNC80Y8g0YLQsNGB0LrQsCwg0LAg0LLQviDQstGC0L7RgNC+0Lwg0L7QsdC90L7QstC70LXQvdC40LUg0LTQu9GPIHRhc2suYXJnXHJcbiAgICAgICAgfSBlbHNlIGlmIChhcmdzLmxlbmd0aCA9PT0gMikge1xyXG4gICAgICAgICAgICBydW5zID0gdGhpcy5fcnVuVGFzayhhcmdzWzBdLCBhcmdzWzFdKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vINCX0LDQv9GD0YHQuiDQstGL0L/QvtC70L3QtdC90LjRjyDQv9GA0L7QstC10YDQutC4INCw0LrRgtC40LLQvdGL0YUg0YLQsNGB0LrQvtCyXHJcbiAgICAgICAgdGhpcy5yYWZJZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLl9sYXVuY2gpO1xyXG5cclxuICAgICAgICByZXR1cm4gcnVucztcclxuICAgIH1cclxuXHJcbiAgICBfc3RvcFRhc2sodGFza0lkKSB7XHJcbiAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5fZmluZFRhc2sodGFza0lkKTtcclxuICAgICAgICBpZiAoaW5kZXggPT09IGZhbHNlKSByZXR1cm4gZmFsc2U7XHJcblxyXG4gICAgICAgIHRoaXMudGFza3NbaW5kZXhdLnJ1biA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMudGFza3NbaW5kZXhdLnRyeU51bSA9IDA7XHJcblxyXG4gICAgICAgIHJldHVybiBpbmRleDtcclxuICAgIH1cclxuXHJcbiAgICAvLyDQntGB0YLQsNC90L7QstC60LAg0YDQtdC60YPRgNGB0LjQstC90L7QuSDQv9GA0L7QstC10YDQutC4INGD0YHQu9C+0LLQuNGPXHJcbiAgICBzdG9wID0gKHRhc2tJZCkgPT4ge1xyXG4gICAgICAgIGxldCBzdG9wZWQ7XHJcbiAgICAgICAgaWYgKHRhc2tJZCAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGxldCBpbmRleCA9IHRoaXMuX3N0b3BUYXNrKHRhc2tJZCk7XHJcbiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgIHN0b3BlZCA9IGluZGV4O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHN0b3BlZCA9IFtdO1xyXG4gICAgICAgICAgICB0aGlzLnRhc2tzLmZvckVhY2goKHRhc2ssIGlkeCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5fc3RvcFRhc2soaWR4KTtcclxuICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgICAgICBzdG9wZWQucHVzaChpbmRleCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMucmFmSWQpO1xyXG4gICAgICAgICAgICB0aGlzLnJhZklkID0gMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBzdG9wZWQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbndpbmRvdy5MYXVuY2hlciA9IExhdW5jaGVyOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./app/scripts/task-launcher.js\\n\");\n\n/***/ })\n\n/******/ });"],"file":"../task-launcher.js"}